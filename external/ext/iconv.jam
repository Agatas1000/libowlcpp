# "owl_cpp/external/ext/iconv.jam"
# part of owl_cpp project.
# Distributed under the Boost Software License, Version 1.0; see doc/license.txt.
# Copyright Mikhail K Levin 2012

# Boost.build script for building iconv library 
# <http://www.gnu.org/software/libiconv/>

import extension ;



import property ;
import project ;
import feature ;
import common ;

extension.declare iconv ;

rule config_h ( targets * : sources * : properties * )
{
   local define = 
       HAVE_ICONV ICONV_CONST
       HAVE_GETC_UNLOCKED
       HAVE_LANGINFO_CODESET
       HAVE_MBRTOWC
       HAVE_SETLOCALE
       HAVE_STDLIB_H
       HAVE_STRING_H
       HAVE_VISIBILITY
       HAVE_WCRTOMB
       HAVE_WORKING_O_NOFOLLOW
       WORDS_LITTLEENDIAN
   ;
   local undef ;
   switch [ property.select <target-os> : $(properties) ]
   {
      case *linux* :
      define +=
         ;
      undef +=
         ;
      BYTEORDER on $(<) = 1234 ;
        
      case *windows* :
      define +=
         ;
      undef +=
         ;
   }
   CONFIG on $(<) =
      "#define $(define) 1"
      "#undef $(undef)" ;
   NL on $(<) = "
" ;
}
actions config_h { @($(STDOUT):E=$(CONFIG:J=$(NL))$(NL)) > "$(<)" }

actions localcharset_h
{
   @($(STDOUT):E=
#ifndef _LOCALCHARSET_H
#define _LOCALCHARSET_H

#if 1 && BUILDING_LIBCHARSET
#define LIBCHARSET_DLL_EXPORTED __attribute__((__visibility__("default")))
#else
#define LIBCHARSET_DLL_EXPORTED
#endif

#ifdef __cplusplus
extern "C" {
#endif
extern LIBCHARSET_DLL_EXPORTED const char * locale_charset (void);

#ifdef __cplusplus
}
#endif
#endif /* _LOCALCHARSET_H */

) > "$(<)"
}

rule init ( version ? : location : options * ) {
   version ?= default ;
   local requirements = [ extension.define iconv $(version) : $(location) : $(options) ] ;
    
   make config.h : : @config_h
      :  <iconv-version>$(version)
         <location-prefix>src
      ;
   make localcharset.h : : @localcharset_h
      :  <iconv-version>$(version)
         <location-prefix>src
      ;
   explicit config.h localcharset.h ;
   
   lib charset
      :  $(location)/libcharset/lib/relocatable.c
         $(location)/libcharset/lib/localcharset.c
      :  $(requirements)
         <iconv-version>$(version)
         <iconv-location>$(location)
         <include>$(location)/include
         <location-prefix>charset
         <define>BUILDING_LIBCHARSET
         <define>ENABLE_RELOCATABLE
         <define>IN_LIBRARY
         <define>NO_XMALLOC
         <define>set_relocation_prefix=libcharset_set_relocation_prefix
         <define>relocate=libcharset_relocate
         <define>HAVE_CONFIG_H
         <define>LIBDIR=\\\"out/ext/inconv/charset\\\"
         <link>shared:<define>BUILDING_DLL
         <implicit-dependency>config.h
         <dependency>config.h
         <implicit-dependency>localcharset.h
         <dependency>localcharset.h
         <toolset>gcc,<target-os>linux:<cflags>"-fvisibility=hidden"
      :
      :   <include>$(location)/lib
   ;

   lib iconv
      :  $(location)/lib/genaliases.c
         $(location)/lib/genaliases2.c
         $(location)/lib/genflags.c
         $(location)/lib/gentranslit.c
         $(location)/lib/iconv.c
         $(location)/lib/relocatable.c
         charset
      :  $(requirements)
         <iconv-version>$(version)
         <iconv-location>$(location)
         <include>$(location)/include
         <location-prefix>iconv
         <implicit-dependency>config.h
         <dependency>config.h
         <implicit-dependency>localcharset.h
         <dependency>localcharset.h
         <define>LIBDIR=\\\"out/ext/inconv/iconv/iconv\\\"
         <define>BUILDING_LIBICONV
         <link>shared:<define>BUILDING_DLL
         <define>ENABLE_RELOCATABLE
         <define>IN_LIBRARY
         <define>NO_XMALLOC
         <define>set_relocation_prefix=libiconv_set_relocation_prefix
         <define>relocate=libiconv_relocate
         <define>HAVE_CONFIG_H
         <toolset>gcc,<target-os>linux:<cflags>"-fvisibility=hidden"
      :
      :  <include>$(location)/lib
         <implicit-dependency>config.h
         <dependency>config.h
         <implicit-dependency>localcharset.h
         <dependency>localcharset.h
      ;
}
