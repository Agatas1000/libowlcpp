# owlcpp/external/jamfile.jam
# part of owlcpp project.
# Distributed under the Boost Software License, Version 1.0; see doc/license.txt.
# Copyright Mikhail K Levin 2010-2

project external ;

if ! $(RAPTOR) { 
   EXIT "
   Please set variable RAPTOR to location and version of expat library.
   See doc/user-config.jam
   " ;
}
using ext/raptor : $(RAPTOR[2]) : $(RAPTOR[1]) ;
alias raptor : /ext/raptor//raptor ;
# alias raptor_pic : /ext/raptor//raptor : <link>static <pic>on ;

if ! $(FACTPP) { 
   EXIT "
   Please set variable FACTPP to location and version of FaCT++ library.
   See doc/user-config.jam
   " ;
}
using ext/factpp : $(FACTPP[2]) : $(FACTPP[1]) ;
alias factpp_kernel 
   : /ext/factpp//factpp_kernel 
   : #<link>static 
;

# libxml2 (not Expat) is used with Raptor because it better handles encodings.
# Building libxml2 requires iconv and libzip.
# On Linux libxml2 is integrated into the system and is expected to be available.
# On Windows and Mac, pre-built libxml2 is currently required.
# A Boost:build module for building it from the sources will be added in future.

import modules ;

local os = [ modules.peek : OS ] ;

if $(os) = LINUX {

   LIBXML2_H ?= /usr/include/libxml2 ;
   
   local libxml2_id = <name>xml2 ;
   if $(LIBXML2_DLL) {
      libxml2_id = <file>$(LIBXML2_DLL) ;
   }
   
   lib libxml2 
      : 
      : 
         $(libxml2_id)
#         <link>shared 
      : 
      : <include>$(LIBXML2_H) <library>zlib 
   ;

   lib zlib : : <name>z ;
   
} else if $(os) = NT {

   if ! $(LIBXML2) && ! ( $(LIBXML2_DLL) && $(LIBXML2_LIB) && $(LIBXML2_H) ) { 
      EXIT "
      Please set variable LIBXML2 to location of pre-compiled libxml2 library.
      See doc/user-config.jam
      " ;
   }
   
   if ! $(ICONV) && ! ( $(ICONV_DLL) && $(ICONV2_LIB) && $(ICONV_H) ) { 
      EXIT "
      Please set variable ICONV to location of pre-compiled iconv library.
      See doc/user-config.jam
      " ;
   }

   if ! $(ZLIB) && ! ( $(ZLIB_DLL) && $(ZLIB_LIB) && $(ZLIB_H) ) { 
      EXIT "
      Please set variable ZLIB to location of pre-compiled zlib library.
      See doc/user-config.jam
      " ;
   }

   LIBXML2_LIB ?= 
#      $(LIBXML2)/lib/libxml2.lib 
      $(LIBXML2)/lib/libxml2_a.lib 
   ;
   
   LIBXML2_DLL ?= 
      $(LIBXML2)/lib/libxml2.lib 
      $(LIBXML2)/bin/libxml2.dll 
   ;
   LIBXML2_H ?= $(LIBXML2)/include ;
   
   ICONV_LIB ?= $(ICONV)/lib/iconv_a.lib ;
   ICONV_DLL ?= $(ICONV)/bin/iconv.dll $(ICONV)/lib/iconv.lib ;
   ICONV_H ?= $(ICONV)/include ;
   
   ZLIB_LIB ?= $(ZLIB)/lib/zlib.lib ;
   ZLIB_DLL ?= $(ZLIB)/bin/zlib1.dll $(ZLIB)/lib/zdll.lib ;
#   ZLIB_H ?= $(ZLIB)/include ;

   lib libxml2
      : 
      : 
         <link>static
         <file>$(LIBXML2_LIB)
         <file>$(ICONV_LIB)
         <file>$(ZLIB_LIB)
		 <name>wsock32
#         <file>"C:/Program Files (x86)/Microsoft SDKs/Windows/v7.0A/Lib/wsock32.lib"
      : 
      : <include>$(LIBXML2_H) <include>$(ICONV_H) <define>LIBXML_STATIC
   ;
   
   lib libxml2
      : 
      :
         <link>shared
         <file>$(LIBXML2_DLL)
         <file>$(ICONV_DLL)
         <file>$(ZLIB_DLL)
      : 
      : <include>$(LIBXML2_H) <include>$(ICONV_H)
   ;
}
