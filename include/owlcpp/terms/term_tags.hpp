/** @file "/owlcpp/include/owlcpp/terms/term_tags.hpp"
part of owlcpp project.
@n Distributed under the Boost Software License, Version 1.0; see doc/license.txt.
@n Copyright Mikhail K Levin 2010
*******************************************************************************/
#ifndef TERM_TAGS_HPP_
#define TERM_TAGS_HPP_
#include <string>
#include "owlcpp/terms/term_macro.hpp"
#include "owlcpp/terms/term_methods.hpp"
#include "owlcpp/terms/uri_tags.hpp"
#include "owlcpp/ns_id.hpp"
#include "owlcpp/node_id.hpp"

namespace owlcpp{ namespace terms{

/** @struct T_xxx_XXX
@brief Common term classes generated by macro OWLCPP_GENERATE_TERM_TYPES
@details Declare types for each standard triplet type;
The type of a triplet is determined by the type of its predicate
e.g.: @code
struct T_owl_AllDifferent {
   typedef N_owl ns_type;
   typedef ::owlcpp::Node_id id_type;
   static const unsigned index = 1;
   static std::string const & name() {
      static const std::string str = std::string("AllDifferent");
      return str;
   }
   static id_type id() {return id_type(index);}
}; @endcode
*******************************************************************************/
OWLCPP_GENERATE_STD_TERM_TYPES

}//namespace terms

}//namespace owlcpp
#endif /* TERM_TAGS_HPP_ */
