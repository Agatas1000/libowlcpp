File owlcpp/doc/build.txt, part of owlcpp project.
Distributed under the Boost Software License, Version 1.0; see doc/license.txt.
Copyright Mikhail K Levin 2011

Instructions for building owlcpp

The build process is managed by Boost.Build V2 (http://www.boost.org/boost-build2).
Libraries required by owlcpp are listed in file "owlcpp/doc/user-config.jam".

1. Download current distribution of Boost (http://www.boost.org/).
   Expand the archive to a directory on your hard drive, 
   e.g., to "C:\Program Files\boost\boost_1_47_0".
   In this document, this directory will be referred as $(BOOST).

2. In your terminal, change directory to $(BOOST)/tools/build/v2/.
   Run script bootstrap.(bat or sh).  
   This will produce Boost.Build executable, e.g., $(BOOST)/tools/build/v2/b2.exe.

3. (optional) Add directory of Boost.Build executable to your PATH variable,
   e.g., "$(BOOST)/tools/build/v2"

4. If not already present, copy file "owlcpp/doc/boost-build.jam" to
   any directory above owlcpp.
   Edit the file to specify full path to Boost.Build.
   For details see "owlcpp/doc/boost-build.jam" file.

5. If not already present, copy file "owlcpp/doc/user-config.jam" to 
   your HOME directory.
   Edit the file to specify compilers and libraries used by owlcpp. 
   For details see "owlcpp/doc/user-config.jam" file.

6. Run Boost.Build in directory owlcpp.  Examples:
        b2 release
        b2 debug test
        b2 --toolset=msvc release
        b2 release api-py
        b2 release test-py
        b2 autodoc
        b2 --clean debug release
   The output will be generated in directory owlcpp/out, e.g.,
   owlcpp/out/bin/gcc-4.5.2/release/lib_owlcpp.so
   owlcpp/out/html/api.html

For more info on using Boost.Build see http://www.boost.org/boost-build2